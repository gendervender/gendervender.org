// stylelint-disable selector-no-qualifying-type

//
// Textual form controls
//

.form-control {
  border: 1px solid $input-border-color !important;
  border-bottom: 1px solid $input-bottom-border-color !important;
  background-color: $input-background !important;
  color: $input-text !important;
  border-radius: $input-border-radius;
  padding: $input-padding;
  margin: $input-margin;
  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if$enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: none;
  } @else {
    border-radius: none;
  }

  box-shadow: none;
  transition: background 150ms ease-in-out;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }
  &:focus {
    background-color: rgba($main-light, 0.2) !important;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  // @include form-control-focus(

  // );

  // Placeholder
  &::placeholder {
    color: $input-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    color: $input-disable-text !important;
    background-color: rgba($main-light, 0);
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
    &::placeholder {
      color: $input-disable-placeholder !important;
      // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
      opacity: 1;
    }
  }
}

select.form-control {
  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: none;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}

//
// Labels
//

/* Form Toggles */
.form-toggle {
  position: relative;
  cursor: pointer;
}

.form-toggle__item {
  display: block;
  padding-left: 1px;
  padding-right: 1px;
  cursor: pointer;
  width: 43px;
  height: 22px;
  font-style: normal;
  font-weight: 700;
  font-size: 9px;
  color: #d5d7dc;
  border: solid 1px #d5d7dc;
  border-radius: 6.25rem;
}

.form-toggle__item i::before,
.form-toggle__item i::after {
  content: "";
  display: block;
  position: absolute;
}

.form-toggle__item i::before {
  content: attr(data-uncheck-icon);
  top: 0;
  left: 0;
  width: 100%;
  line-height: 18px;
  text-align: right;
  padding: 2px 7px;
}

.form-toggle__item i::after {
  left: 4px;
  width: 16px;
  height: 16px;
  background-color: #d5d7dc;
  border-radius: 50%;
  transform: translateY(-50%);
  transition: left 0.2s ease;
}

.form-toggle input[type="checkbox"],
.form-toggle input[type="radio"] {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.form-toggle input[type="checkbox"]:checked + .form-toggle__item,
.form-toggle input[type="checkbox"]:checked + * .form-toggle__item,
.form-toggle input[type="radio"]:checked + .form-toggle__item,
.form-toggle input[type="radio"]:checked + * .form-toggle__item {
  color: #fff;
  background-color: #59287a;
  border-color: #59287a;
  transition: all 0.3s ease;
}

.form-toggle input[type="checkbox"]:checked + .form-toggle__item i:before,
.form-toggle input[type="checkbox"]:checked + * .form-toggle__item i:before,
.form-toggle input[type="radio"]:checked + .form-toggle__item i:before,
.form-toggle input[type="radio"]:checked + * .form-toggle__item i:before {
  content: attr(data-check-icon);
  text-align: left;
}

.form-toggle input[type="checkbox"]:checked + .form-toggle__item i::after,
.form-toggle input[type="checkbox"]:checked + * .form-toggle__item i::after,
.form-toggle input[type="radio"]:checked + .form-toggle__item i::after,
.form-toggle input[type="radio"]:checked + * .form-toggle__item i::after {
  left: calc(100% - 19px);
  background-color: #fff;
}

.is-valid .form-toggle__item {
  color: #0dd157;
  border: solid 1px #0dd157;
}

.is-valid .form-toggle__item i::after {
  background-color: #0dd157;
}

.is-valid .form-toggle input[type="checkbox"]:checked + .form-toggle__item,
.is-valid .form-toggle input[type="checkbox"]:checked + * .form-toggle__item,
.is-valid .form-toggle input[type="radio"]:checked + .form-toggle__item,
.is-valid .form-toggle input[type="radio"]:checked + * .form-toggle__item {
  background-color: #0dd157;
  border-color: #0dd157;
}

.is-invalid .form-toggle__item {
  color: #fb4143;
  border: solid 1px #fb4143;
}

.is-invalid .form-toggle__item i::after {
  background-color: #fb4143;
}

.is-invalid .form-toggle input[type="checkbox"]:checked + .form-toggle__item,
.is-invalid .form-toggle input[type="checkbox"]:checked + * .form-toggle__item,
.is-invalid .form-toggle input[type="radio"]:checked + .form-toggle__item,
.is-invalid .form-toggle input[type="radio"]:checked + * .form-toggle__item {
  background-color: #fb4143;
  border-color: #fb4143;
}

.is-disabled .form-toggle__item {
  color: #e6e7e9;
  border: solid 1px #e6e7e9;
}

.is-disabled .form-toggle__item i::after {
  background-color: #e6e7e9;
}

.is-disabled .form-toggle input[type="checkbox"]:checked + .form-toggle__item,
.is-disabled .form-toggle input[type="checkbox"]:checked + * .form-toggle__item,
.is-disabled .form-toggle input[type="radio"]:checked + .form-toggle__item,
.is-disabled .form-toggle input[type="radio"]:checked + * .form-toggle__item {
  background-color: #e6e7e9;
  border-color: #e6e7e9;
}

/* Bootstrap's Custom Controls */
.custom-control-input.is-valid:checked ~ .custom-control-label::before {
  background-color: #0dd157;
}

.custom-control-input.is-invalid:checked ~ .custom-control-label::before {
  background-color: #fb4143;
}

.custom-control-input:disabled:checked ~ .custom-control-label::before {
  background-color: #d5d7dc;
}
.form-icon-input-left {
  position: relative;
  padding-left: 2.1875rem;
}
.form-icon-input-right {
  position: relative;
  padding-right: 2.1875rem;
}
.form-icon {
  position: absolute;

  width: 2.5rem;
  top: 7px;
  &--right {
    right: -10px;
  }
  &--left {
    left: 10px;
  }
}
.form-icon-wrapper {
  position: relative;
  display: flex;
}
form {
  background: $form-background;
  padding: $form-padding;
  box-shadow: $form-shadow;
  border-radius: $form-radius;
}
